import telebot
from telebot import types
import time


bot = telebot.TeleBot('6135314118:AAHkksZtMolECCUQXFGexkJNYqbhrDpYyWA')

@bot.message_handler(commands=["start"])
def start(message, res=False):
        markup=types.ReplyKeyboardMarkup(True,False)
        markup.row('–ü—ñ–¥—Ç—Ä–∏–º–∫–∞üõ†','–†–æ–∑–∫–ª–∞–¥ üóì','–ë–æ–º–±–æ—Å—Ö–æ–≤–∏—â–∞‚ö†Ô∏è')
        markup.add('–ù–æ–≤–∏–Ω–∏ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—Éüì∞')
        bot.send_message(message.chat.id, '–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ ‚ùóÔ∏è\n–í–∏–±–µ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é –∑—ñ —Å–ø–∏—Å–∫—É –Ω–∏–∂—á–µ‚öôÔ∏è',  reply_markup=markup)
        


        
        

        
@bot.message_handler(commands=["chatgpt"])
def botgpt(message):
 
       
         send = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–ª—è –ø–æ—à—É–∫—É')
         bot.register_next_step_handler(send, chatgpt)
        
def chatgpt(message):
        import openai


        
        openai.api_key = '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'

        print(message.text)

        try:
                response = openai.Completion.create(
                            model = "text-davinci-003",
                            prompt= message.text,
                            temperature = 0.5,
                            max_tokens = 500,
                            top_p=1.0,
                            frequency_penalty=0.5,
                            presence_penalty=0.0,
                        )

                bot.send_message(message.chat.id, text=response['choices'][0]['text']) 
        except:
              time.sleep(10) //
              bot.send_message(message.chat.id, text= '–ó–∞—á–µ–∫–∞–π—Ç–µ —â–µ —Ç—Ä–æ—Ö–∏...')
              chatgpt(message)
 

           
      
 
        

@bot.message_handler(content_types=["text"])

def handle_text(message):

    if message.text.strip() == '–†–æ–∑–∫–ª–∞–¥ üóì' :
        markupS=types.ReplyKeyboardMarkup(True,False)
        
  
        markupS.row('–ü–æ—á–∞—Ç–æ–∫ —Ç–∞ –∫—ñ–Ω–µ—Ü—å –ø–∞—Ä','–†–æ–∑–∫–ª–∞–¥ –∑–∞–Ω—è—Ç—å')
        markupS.add('–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é')

        bot.send_message(message.chat.id, text="–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –æ–¥–Ω—É –∑ –∫–Ω–æ–ø–æ–∫ ‚úÖ", reply_markup=markupS)
        

    elif message.text.strip() == '–†–æ–∑–∫–ª–∞–¥ –∑–∞–Ω—è—Ç—å' :
        markupA=types.ReplyKeyboardMarkup(True,False)

        markupA.row('–ö–ë21015–ë','–ö–ë21016–ë','–ö–ë22014–ë')
        markupA.add('–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é')

        bot.send_message(message.chat.id, text="–í–∏–±–µ—Ä–∏ –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è", reply_markup=markupA)

    elif message.text.strip() == '–ü–æ—á–∞—Ç–æ–∫ —Ç–∞ –∫—ñ–Ω–µ—Ü—å –ø–∞—Ä' :

        
        bot.send_message(message.chat.id, text="–ê–∫—Ç—É–∞–ª—å–Ω–∏–π —Ä–æ–∑–∫–ª–∞–¥ –ø–æ—á–∞—Ç–∫—É —Ç–∞ –∫—ñ–Ω—Ü—è –ø–∞—Ä ‚¨áÔ∏è")

        opTimeTable = open('static/pictures/timetable.png', 'rb')
        bot.send_photo(message.chat.id, opTimeTable)

       

    elif message.text.strip() == '–ö–ë21015–ë':

            data = open('static\data\schedule\kb21015b.txt', 'r', encoding='utf-8')
            bot.send_message(message.chat.id, text= '           „Ö§   ' + data.read(),parse_mode='html')
            
    elif message.text.strip() == '–ö–ë21016–ë':

            data = open('static\data\schedule\kb21016b.txt', 'r', encoding='utf-8')
            bot.send_message(message.chat.id, text= '           „Ö§   ' + data.read(),parse_mode='html')

    elif message.text.strip() == '–ö–ë22014–ë':

            data = open('static\data\schedule\kb22014b.txt', 'r', encoding='utf-8')
            bot.send_message(message.chat.id, text= '           „Ö§   ' + data.read(),parse_mode='html')
            

    elif message.text.strip() == '–ë–æ–º–±–æ—Å—Ö–æ–≤–∏—â–∞‚ö†Ô∏è' :

       opMap = open('static/pictures/map.png', 'rb')
       bot.send_photo(message.chat.id, opMap)
       
       bot.send_message(message.chat.id,"<b>üóí –°–ø–∏—Å–æ–∫ –±–æ–º–±–æ—Å—Ö–æ–≤–∏—â –Ω–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É\n‚îú –≤—É–ª. –ì–µ—Ä–æ—ó–≤ –û–±–æ—Ä–æ–Ω–∏, 14  (–ö–æ—Ä–ø—É—Å ‚Ññ5)\n‚îú –≤—É–ª. –ì–µ—Ä–æ—ó–≤ –û–±–æ—Ä–æ–Ω–∏, 12–í (–ö–æ—Ä–ø—É—Å ‚Ññ7)\n‚îú –≤—É–ª. –ì–µ—Ä–æ—ó–≤ –û–±–æ—Ä–æ–Ω–∏, 11  (–ö–æ—Ä–ø—É—Å ‚Ññ10)\n‚îú –≤—É–ª. –ì–µ—Ä–æ—ó–≤ –û–±–æ—Ä–æ–Ω–∏, 15  (–ö–æ—Ä–ø—É—Å ‚Ññ3)\n‚îú –≤—É–ª. –ì–µ—Ä–æ—ó–≤ –û–±–æ—Ä–æ–Ω–∏, 17  (–ö–æ—Ä–ø—É—Å ‚Ññ2)\n‚îî –≤—É–ª. –†–æ–¥–∏–º—Ü–µ–≤–∞, 19         (–ö–æ—Ä–ø—É—Å ‚Ññ1)\n </b>", parse_mode='html')

    elif message.text.strip() == '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞üõ†' :

        bot.send_message(message.chat.id, text="–ó —É—Å—ñ—Ö —Ç–µ—Ö–Ω—ñ—á–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å ---> @rokepump2 ")
        
 
    
    

    elif message.text.strip() == '–ù–æ–≤–∏–Ω–∏ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—Éüì∞':
            import os
            import numpy as np
            os.system('python3 news.py')
            
            addlist = np.load('ns.npy')


            markupV = types.InlineKeyboardMarkup()
            url_btn1 = types.InlineKeyboardButton(text=addlist[0],  url='https://nubip.edu.ua'  + addlist[1])
            url_btn2 = types.InlineKeyboardButton(text=addlist[2],  url='https://nubip.edu.ua'  + addlist[3])
            url_btn3 = types.InlineKeyboardButton(text=addlist[4],  url='https://nubip.edu.ua'  + addlist[5])
            url_btn4 = types.InlineKeyboardButton(text=addlist[6],  url='https://nubip.edu.ua'  + addlist[7])
            url_btn5 = types.InlineKeyboardButton(text=addlist[8],  url='https://nubip.edu.ua'  + addlist[9])
            url_btn6 = types.InlineKeyboardButton(text=addlist[10], url='https://nubip.edu.ua'  + addlist[11])
            url_btn7 = types.InlineKeyboardButton(text=addlist[12], url='https://nubip.edu.ua'  + addlist[13])
            url_btn8 = types.InlineKeyboardButton(text=addlist[14], url='https://nubip.edu.ua'  + addlist[15])
            url_btn9 = types.InlineKeyboardButton(text=addlist[16], url='https://nubip.edu.ua'  + addlist[17])
            url_btn10 = types.InlineKeyboardButton(text=addlist[18],url='https://nubip.edu.ua'  + addlist[19])
            markupV.add(url_btn1)
            markupV.add(url_btn2)
            markupV.add(url_btn3)
            markupV.add(url_btn4)
            markupV.add(url_btn5)
            markupV.add(url_btn6)
            markupV.add(url_btn7)
            markupV.add(url_btn8)
            markupV.add(url_btn9)
            markupV.add(url_btn10)

            from datetime import datetime

            current_datetime = datetime.now()
            
            bot.send_message(message.chat.id, '–ê–∫—Ç—É–∞–ª—å–Ω—ñ –Ω–æ–≤–∏–Ω–∏ —Å—Ç–∞–Ω–æ–º –Ω–∞ '+ str(current_datetime.day) + '.' + str(current_datetime.month) + '.' +  str(current_datetime.year) + '‚ö†Ô∏è', reply_markup=markupV)

            
            
    elif message.text.strip() == '–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é':
            
        markup=types.ReplyKeyboardMarkup(True,False)
        markup.row('–ü—ñ–¥—Ç—Ä–∏–º–∫–∞üõ†','–†–æ–∑–∫–ª–∞–¥ üóì','–ë–æ–º–±–æ—Å—Ö–æ–≤–∏—â–∞‚ö†Ô∏è')
        markup.add('–ù–æ–≤–∏–Ω–∏ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—Éüì∞')
        bot.send_message(message.chat.id, '–í–∏–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –∑ –º–µ–Ω—é',  reply_markup=markup)
            
    else:

       bot.send_message(message.chat.id,"–í–∏–±–∞—á, –∞–ª–µ —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ç–µ–±–µüòû")
       

              

bot.polling(none_stop=True, interval=0)

         



